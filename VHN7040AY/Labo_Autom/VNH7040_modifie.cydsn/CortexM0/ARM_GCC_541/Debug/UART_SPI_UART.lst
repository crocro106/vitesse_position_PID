ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_SPI_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	UART_rxBufferHead,4,4
  20              		.comm	UART_rxBufferTail,4,4
  21              		.comm	UART_rxBufferOverflow,1,1
  22              		.comm	UART_txBufferHead,4,4
  23              		.comm	UART_txBufferTail,4,4
  24              		.comm	UART_rxBufferInternal,101,4
  25              		.comm	UART_txBufferInternal,100,4
  26              		.section	.text.UART_SpiUartReadRxData,"ax",%progbits
  27              		.align	2
  28              		.global	UART_SpiUartReadRxData
  29              		.code	16
  30              		.thumb_func
  31              		.type	UART_SpiUartReadRxData, %function
  32              	UART_SpiUartReadRxData:
  33              	.LFB0:
  34              		.file 1 "Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_SPI_UART.c **** * \file UART_SPI_UART.c
   3:Generated_Source\PSoC4/UART_SPI_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:Generated_Source\PSoC4/UART_SPI_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_SPI_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  19:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  22:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  23:Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 2


  24:Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  25:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  26:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  27:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  29:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  31:Generated_Source\PSoC4/UART_SPI_UART.c ****     /**
  32:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \addtogroup group_globals
  33:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \{
  34:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  35:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  was occurred.
  37:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  38:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  39:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** \} globals */
  40:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  41:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  42:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  43:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
  45:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  47:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  48:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  49:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  50:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  52:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  53:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  54:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  55:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  56:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  57:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  58:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  59:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  60:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  61:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  62:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
  63:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  64:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  70:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  71:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
  72:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  76:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
  77:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
  78:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  79:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
  80:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 3


  81:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  82:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  83:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  84:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  35              		.loc 1 84 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 8
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 82B0     		sub	sp, sp, #8
  44              		.cfi_def_cfa_offset 16
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  47              		.loc 1 85 0
  48 0006 0023     		movs	r3, #0
  49 0008 7B60     		str	r3, [r7, #4]
  86:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  87:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  88:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  89:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  90:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  92:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  93:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  50              		.loc 1 93 0
  51 000a 0E4B     		ldr	r3, .L5
  52 000c 1A68     		ldr	r2, [r3]
  53 000e 0E4B     		ldr	r3, .L5+4
  54 0010 1B68     		ldr	r3, [r3]
  55 0012 9A42     		cmp	r2, r3
  56 0014 11D0     		beq	.L2
  94:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  95:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  98:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  57              		.loc 1 98 0
  58 0016 0C4B     		ldr	r3, .L5+4
  59 0018 1B68     		ldr	r3, [r3]
  60 001a 0133     		adds	r3, r3, #1
  61 001c 3B60     		str	r3, [r7]
  99:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 100:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
  62              		.loc 1 100 0
  63 001e 3B68     		ldr	r3, [r7]
  64 0020 652B     		cmp	r3, #101
  65 0022 01D1     		bne	.L3
 101:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 102:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
  66              		.loc 1 102 0
  67 0024 0023     		movs	r3, #0
  68 0026 3B60     		str	r3, [r7]
  69              	.L3:
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 4


 103:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 104:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 105:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
  70              		.loc 1 106 0
  71 0028 084A     		ldr	r2, .L5+8
  72 002a 3B68     		ldr	r3, [r7]
  73 002c D318     		adds	r3, r2, r3
  74 002e 1B78     		ldrb	r3, [r3]
  75 0030 DBB2     		uxtb	r3, r3
  76 0032 7B60     		str	r3, [r7, #4]
 107:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 108:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
 109:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
  77              		.loc 1 109 0
  78 0034 044B     		ldr	r3, .L5+4
  79 0036 3A68     		ldr	r2, [r7]
  80 0038 1A60     		str	r2, [r3]
  81              	.L2:
 110:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 111:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 112:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 113:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 115:Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 116:Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 118:Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 119:Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 120:Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 121:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 122:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 123:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 124:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 125:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 126:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 127:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 128:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 129:Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 130:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 131:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 132:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 133:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
  82              		.loc 1 133 0
  83 003a 7B68     		ldr	r3, [r7, #4]
 134:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  84              		.loc 1 134 0
  85 003c 1800     		movs	r0, r3
  86 003e BD46     		mov	sp, r7
  87 0040 02B0     		add	sp, sp, #8
  88              		@ sp needed
  89 0042 80BD     		pop	{r7, pc}
  90              	.L6:
  91              		.align	2
  92              	.L5:
  93 0044 00000000 		.word	UART_rxBufferHead
  94 0048 00000000 		.word	UART_rxBufferTail
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 5


  95 004c 00000000 		.word	UART_rxBufferInternal
  96              		.cfi_endproc
  97              	.LFE0:
  98              		.size	UART_SpiUartReadRxData, .-UART_SpiUartReadRxData
  99              		.section	.text.UART_SpiUartGetRxBufferSize,"ax",%progbits
 100              		.align	2
 101              		.global	UART_SpiUartGetRxBufferSize
 102              		.code	16
 103              		.thumb_func
 104              		.type	UART_SpiUartGetRxBufferSize, %function
 105              	UART_SpiUartGetRxBufferSize:
 106              	.LFB1:
 135:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 136:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 137:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 138:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 139:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 140:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 141:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 144:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 147:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 148:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements.
 149:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 150:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 151:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 152:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 153:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 154:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 155:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 156:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 157:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 158:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 107              		.loc 1 158 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 8
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111 0000 80B5     		push	{r7, lr}
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 7, -8
 114              		.cfi_offset 14, -4
 115 0002 82B0     		sub	sp, sp, #8
 116              		.cfi_def_cfa_offset 16
 117 0004 00AF     		add	r7, sp, #0
 118              		.cfi_def_cfa_register 7
 159:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 160:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 161:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 162:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 163:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 164:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 165:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 166:Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 119              		.loc 1 166 0
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 6


 120 0006 0C4B     		ldr	r3, .L11
 121 0008 1B68     		ldr	r3, [r3]
 122 000a 3B60     		str	r3, [r7]
 167:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 168:Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 123              		.loc 1 168 0
 124 000c 0B4B     		ldr	r3, .L11+4
 125 000e 1B68     		ldr	r3, [r3]
 126 0010 3A68     		ldr	r2, [r7]
 127 0012 9A42     		cmp	r2, r3
 128 0014 05D3     		bcc	.L8
 169:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 170:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 129              		.loc 1 170 0
 130 0016 094B     		ldr	r3, .L11+4
 131 0018 1B68     		ldr	r3, [r3]
 132 001a 3A68     		ldr	r2, [r7]
 133 001c D31A     		subs	r3, r2, r3
 134 001e 7B60     		str	r3, [r7, #4]
 135 0020 05E0     		b	.L9
 136              	.L8:
 171:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 172:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 173:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 174:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 137              		.loc 1 174 0
 138 0022 064B     		ldr	r3, .L11+4
 139 0024 1B68     		ldr	r3, [r3]
 140 0026 3A68     		ldr	r2, [r7]
 141 0028 D31A     		subs	r3, r2, r3
 142 002a 6533     		adds	r3, r3, #101
 143 002c 7B60     		str	r3, [r7, #4]
 144              	.L9:
 175:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 176:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 177:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 178:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 179:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
 180:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 181:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 182:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 183:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 145              		.loc 1 183 0
 146 002e 7B68     		ldr	r3, [r7, #4]
 184:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 147              		.loc 1 184 0
 148 0030 1800     		movs	r0, r3
 149 0032 BD46     		mov	sp, r7
 150 0034 02B0     		add	sp, sp, #8
 151              		@ sp needed
 152 0036 80BD     		pop	{r7, pc}
 153              	.L12:
 154              		.align	2
 155              	.L11:
 156 0038 00000000 		.word	UART_rxBufferHead
 157 003c 00000000 		.word	UART_rxBufferTail
 158              		.cfi_endproc
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 7


 159              	.LFE1:
 160              		.size	UART_SpiUartGetRxBufferSize, .-UART_SpiUartGetRxBufferSize
 161              		.section	.text.UART_SpiUartClearRxBuffer,"ax",%progbits
 162              		.align	2
 163              		.global	UART_SpiUartClearRxBuffer
 164              		.code	16
 165              		.thumb_func
 166              		.type	UART_SpiUartClearRxBuffer, %function
 167              	UART_SpiUartClearRxBuffer:
 168              	.LFB2:
 185:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 186:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 187:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 188:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 189:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 190:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 191:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 193:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 194:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 195:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 196:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 197:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 198:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 199:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 200:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 201:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 169              		.loc 1 201 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 202:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 203:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 204:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 205:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 179              		.loc 1 205 0
 180 0004 0A20     		movs	r0, #10
 181 0006 FFF7FEFF 		bl	CyIntDisable
 206:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 207:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 208:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 182              		.loc 1 208 0
 183 000a 0E4B     		ldr	r3, .L14
 184 000c 1A68     		ldr	r2, [r3]
 185 000e 0E4B     		ldr	r3, .L14+4
 186 0010 1A60     		str	r2, [r3]
 209:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 187              		.loc 1 209 0
 188 0012 0E4B     		ldr	r3, .L14+8
 189 0014 0022     		movs	r2, #0
 190 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 8


 210:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 211:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 191              		.loc 1 211 0
 192 0018 0D4B     		ldr	r3, .L14+12
 193 001a 0D4A     		ldr	r2, .L14+12
 194 001c 1268     		ldr	r2, [r2]
 195 001e 8021     		movs	r1, #128
 196 0020 4902     		lsls	r1, r1, #9
 197 0022 0A43     		orrs	r2, r1
 198 0024 1A60     		str	r2, [r3]
 199 0026 0A4B     		ldr	r3, .L14+12
 200 0028 094A     		ldr	r2, .L14+12
 201 002a 1268     		ldr	r2, [r2]
 202 002c 0949     		ldr	r1, .L14+16
 203 002e 0A40     		ands	r2, r1
 204 0030 1A60     		str	r2, [r3]
 212:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 205              		.loc 1 212 0
 206 0032 094B     		ldr	r3, .L14+20
 207 0034 094A     		ldr	r2, .L14+24
 208 0036 1A60     		str	r2, [r3]
 213:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 214:Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 215:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 216:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 218:Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
 219:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 220:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 221:Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 222:Generated_Source\PSoC4/UART_SPI_UART.c ****             
 223:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 224:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 209              		.loc 1 224 0
 210 0038 0A20     		movs	r0, #10
 211 003a FFF7FEFF 		bl	CyIntEnable
 225:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 226:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 227:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 228:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 229:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 230:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 231:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 212              		.loc 1 231 0
 213 003e C046     		nop
 214 0040 BD46     		mov	sp, r7
 215              		@ sp needed
 216 0042 80BD     		pop	{r7, pc}
 217              	.L15:
 218              		.align	2
 219              	.L14:
 220 0044 00000000 		.word	UART_rxBufferTail
 221 0048 00000000 		.word	UART_rxBufferHead
 222 004c 00000000 		.word	UART_rxBufferOverflow
 223 0050 04030640 		.word	1074135812
 224 0054 FFFFFEFF 		.word	-65537
 225 0058 C00F0640 		.word	1074139072
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 9


 226 005c ED0F0000 		.word	4077
 227              		.cfi_endproc
 228              	.LFE2:
 229              		.size	UART_SpiUartClearRxBuffer, .-UART_SpiUartClearRxBuffer
 230              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
 231              		.align	2
 232              		.global	UART_SpiUartWriteTxData
 233              		.code	16
 234              		.thumb_func
 235              		.type	UART_SpiUartWriteTxData, %function
 236              	UART_SpiUartWriteTxData:
 237              	.LFB3:
 232:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 233:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 234:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 235:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 236:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 237:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 238:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 239:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 240:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 241:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 243:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 246:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 250:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 251:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 252:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 253:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 254:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 255:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 256:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 257:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 258:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 238              		.loc 1 258 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 16
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 80B5     		push	{r7, lr}
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0002 84B0     		sub	sp, sp, #16
 247              		.cfi_def_cfa_offset 24
 248 0004 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 250 0006 7860     		str	r0, [r7, #4]
 259:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 260:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 261:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 262:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 263:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 10


 264:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 265:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 251              		.loc 1 266 0
 252 0008 1D4B     		ldr	r3, .L23
 253 000a 1A68     		ldr	r2, [r3]
 254 000c 1D4B     		ldr	r3, .L23+4
 255 000e 1B68     		ldr	r3, [r3]
 256 0010 9A42     		cmp	r2, r3
 257 0012 09D1     		bne	.L17
 267:Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 258              		.loc 1 267 0 discriminator 1
 259 0014 1C4B     		ldr	r3, .L23+8
 260 0016 1B68     		ldr	r3, [r3]
 261 0018 0F22     		movs	r2, #15
 262 001a 1340     		ands	r3, r2
 266:Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 263              		.loc 1 266 0 discriminator 1
 264 001c 082B     		cmp	r3, #8
 265 001e 03D0     		beq	.L17
 268:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 269:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 266              		.loc 1 270 0
 267 0020 1A4B     		ldr	r3, .L23+12
 268 0022 7A68     		ldr	r2, [r7, #4]
 269 0024 1A60     		str	r2, [r3]
 271:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 272:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 273:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 274:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 275:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 276:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 277:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 280:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 281:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 282:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 283:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 284:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 286:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 287:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 288:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 289:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 291:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 293:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 294:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 295:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 296:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 297:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 298:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 300:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 11


 301:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 303:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 304:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 305:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 306:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 307:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 308:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
 310:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 311:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 312:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 313:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
 314:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 315:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 316:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 270              		.loc 1 316 0
 271 0026 26E0     		b	.L21
 272              	.L17:
 276:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 273              		.loc 1 276 0
 274 0028 154B     		ldr	r3, .L23
 275 002a 1B68     		ldr	r3, [r3]
 276 002c 0133     		adds	r3, r3, #1
 277 002e FB60     		str	r3, [r7, #12]
 279:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 278              		.loc 1 279 0
 279 0030 FB68     		ldr	r3, [r7, #12]
 280 0032 642B     		cmp	r3, #100
 281 0034 01D1     		bne	.L22
 281:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 282              		.loc 1 281 0
 283 0036 0023     		movs	r3, #0
 284 0038 FB60     		str	r3, [r7, #12]
 285              	.L22:
 285:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 286              		.loc 1 285 0
 287 003a C046     		nop
 288              	.L20:
 285:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 289              		.loc 1 285 0 is_stmt 0 discriminator 1
 290 003c 114B     		ldr	r3, .L23+4
 291 003e 1B68     		ldr	r3, [r3]
 292 0040 FA68     		ldr	r2, [r7, #12]
 293 0042 9A42     		cmp	r2, r3
 294 0044 FAD0     		beq	.L20
 292:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 295              		.loc 1 292 0 is_stmt 1
 296 0046 124B     		ldr	r3, .L23+16
 297 0048 0222     		movs	r2, #2
 298 004a 1A60     		str	r2, [r3]
 294:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 299              		.loc 1 294 0
 300 004c 7B68     		ldr	r3, [r7, #4]
 301 004e D9B2     		uxtb	r1, r3
 302 0050 104A     		ldr	r2, .L23+20
 303 0052 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 12


 304 0054 D318     		adds	r3, r2, r3
 305 0056 0A1C     		adds	r2, r1, #0
 306 0058 1A70     		strb	r2, [r3]
 296:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 307              		.loc 1 296 0
 308 005a 094B     		ldr	r3, .L23
 309 005c FA68     		ldr	r2, [r7, #12]
 310 005e 1A60     		str	r2, [r3]
 299:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 311              		.loc 1 299 0
 312 0060 0D4B     		ldr	r3, .L23+24
 313 0062 1B68     		ldr	r3, [r3]
 314 0064 0222     		movs	r2, #2
 315 0066 1340     		ands	r3, r2
 316 0068 05D1     		bne	.L21
 302:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 317              		.loc 1 302 0
 318 006a 0B4B     		ldr	r3, .L23+24
 319 006c 0A4A     		ldr	r2, .L23+24
 320 006e 1268     		ldr	r2, [r2]
 321 0070 0221     		movs	r1, #2
 322 0072 0A43     		orrs	r2, r1
 323 0074 1A60     		str	r2, [r3]
 324              	.L21:
 325              		.loc 1 316 0
 326 0076 C046     		nop
 327 0078 BD46     		mov	sp, r7
 328 007a 04B0     		add	sp, sp, #16
 329              		@ sp needed
 330 007c 80BD     		pop	{r7, pc}
 331              	.L24:
 332 007e C046     		.align	2
 333              	.L23:
 334 0080 00000000 		.word	UART_txBufferHead
 335 0084 00000000 		.word	UART_txBufferTail
 336 0088 08020640 		.word	1074135560
 337 008c 40020640 		.word	1074135616
 338 0090 800F0640 		.word	1074139008
 339 0094 00000000 		.word	UART_txBufferInternal
 340 0098 880F0640 		.word	1074139016
 341              		.cfi_endproc
 342              	.LFE3:
 343              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
 344              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
 345              		.align	2
 346              		.global	UART_SpiUartPutArray
 347              		.code	16
 348              		.thumb_func
 349              		.type	UART_SpiUartPutArray, %function
 350              	UART_SpiUartPutArray:
 351              	.LFB4:
 317:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 318:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 319:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 321:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 13


 323:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 327:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 328:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 333:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 334:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 335:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 336:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 337:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 338:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 339:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 352              		.loc 1 341 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 16
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356 0000 80B5     		push	{r7, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 84B0     		sub	sp, sp, #16
 361              		.cfi_def_cfa_offset 24
 362 0004 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 365 0008 3960     		str	r1, [r7]
 342:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 343:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
 366              		.loc 1 344 0
 367 000a 0023     		movs	r3, #0
 368 000c FB60     		str	r3, [r7, #12]
 369 000e 09E0     		b	.L26
 370              	.L27:
 345:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 346:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
 371              		.loc 1 346 0 discriminator 3
 372 0010 7A68     		ldr	r2, [r7, #4]
 373 0012 FB68     		ldr	r3, [r7, #12]
 374 0014 D318     		adds	r3, r2, r3
 375 0016 1B78     		ldrb	r3, [r3]
 376 0018 1800     		movs	r0, r3
 377 001a FFF7FEFF 		bl	UART_SpiUartWriteTxData
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 378              		.loc 1 344 0 discriminator 3
 379 001e FB68     		ldr	r3, [r7, #12]
 380 0020 0133     		adds	r3, r3, #1
 381 0022 FB60     		str	r3, [r7, #12]
 382              	.L26:
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 14


 383              		.loc 1 344 0 is_stmt 0 discriminator 1
 384 0024 FA68     		ldr	r2, [r7, #12]
 385 0026 3B68     		ldr	r3, [r7]
 386 0028 9A42     		cmp	r2, r3
 387 002a F1D3     		bcc	.L27
 347:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 348:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 388              		.loc 1 348 0 is_stmt 1
 389 002c C046     		nop
 390 002e BD46     		mov	sp, r7
 391 0030 04B0     		add	sp, sp, #16
 392              		@ sp needed
 393 0032 80BD     		pop	{r7, pc}
 394              		.cfi_endproc
 395              	.LFE4:
 396              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
 397              		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
 398              		.align	2
 399              		.global	UART_SpiUartGetTxBufferSize
 400              		.code	16
 401              		.thumb_func
 402              		.type	UART_SpiUartGetTxBufferSize, %function
 403              	UART_SpiUartGetTxBufferSize:
 404              	.LFB5:
 349:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 350:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 351:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 353:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 355:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     TX FIFO.
 358:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     not full.
 362:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 363:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 364:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 366:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 367:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 368:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 369:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 370:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 371:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 372:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 373:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 374:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 405              		.loc 1 374 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 8
 408              		@ frame_needed = 1, uses_anonymous_args = 0
 409 0000 80B5     		push	{r7, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 7, -8
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 15


 412              		.cfi_offset 14, -4
 413 0002 82B0     		sub	sp, sp, #8
 414              		.cfi_def_cfa_offset 16
 415 0004 00AF     		add	r7, sp, #0
 416              		.cfi_def_cfa_register 7
 375:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 376:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 377:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 378:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 379:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 381:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 382:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 383:Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 417              		.loc 1 383 0
 418 0006 0C4B     		ldr	r3, .L32
 419 0008 1B68     		ldr	r3, [r3]
 420 000a 3B60     		str	r3, [r7]
 384:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 385:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 421              		.loc 1 385 0
 422 000c 0B4B     		ldr	r3, .L32+4
 423 000e 1A68     		ldr	r2, [r3]
 424 0010 3B68     		ldr	r3, [r7]
 425 0012 9A42     		cmp	r2, r3
 426 0014 05D3     		bcc	.L29
 386:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 387:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 427              		.loc 1 387 0
 428 0016 094B     		ldr	r3, .L32+4
 429 0018 1A68     		ldr	r2, [r3]
 430 001a 3B68     		ldr	r3, [r7]
 431 001c D31A     		subs	r3, r2, r3
 432 001e 7B60     		str	r3, [r7, #4]
 433 0020 05E0     		b	.L30
 434              	.L29:
 388:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 389:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 390:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 391:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 435              		.loc 1 391 0
 436 0022 064B     		ldr	r3, .L32+4
 437 0024 1A68     		ldr	r2, [r3]
 438 0026 3B68     		ldr	r3, [r7]
 439 0028 D31A     		subs	r3, r2, r3
 440 002a 6433     		adds	r3, r3, #100
 441 002c 7B60     		str	r3, [r7, #4]
 442              	.L30:
 392:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 393:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 394:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 395:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 396:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 397:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 398:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 399:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 400:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 16


 443              		.loc 1 400 0
 444 002e 7B68     		ldr	r3, [r7, #4]
 401:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 445              		.loc 1 401 0
 446 0030 1800     		movs	r0, r3
 447 0032 BD46     		mov	sp, r7
 448 0034 02B0     		add	sp, sp, #8
 449              		@ sp needed
 450 0036 80BD     		pop	{r7, pc}
 451              	.L33:
 452              		.align	2
 453              	.L32:
 454 0038 00000000 		.word	UART_txBufferTail
 455 003c 00000000 		.word	UART_txBufferHead
 456              		.cfi_endproc
 457              	.LFE5:
 458              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 459              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
 460              		.align	2
 461              		.global	UART_SpiUartClearTxBuffer
 462              		.code	16
 463              		.thumb_func
 464              		.type	UART_SpiUartClearTxBuffer, %function
 465              	UART_SpiUartClearTxBuffer:
 466              	.LFB6:
 402:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 403:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 404:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
 406:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 408:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 410:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 411:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 412:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 413:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 414:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 415:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 416:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 418:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 467              		.loc 1 418 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 1, uses_anonymous_args = 0
 471 0000 80B5     		push	{r7, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 7, -8
 474              		.cfi_offset 14, -4
 475 0002 00AF     		add	r7, sp, #0
 476              		.cfi_def_cfa_register 7
 419:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 420:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 421:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 422:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 477              		.loc 1 422 0
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 17


 478 0004 0A20     		movs	r0, #10
 479 0006 FFF7FEFF 		bl	CyIntDisable
 423:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 424:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 425:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 480              		.loc 1 425 0
 481 000a 104B     		ldr	r3, .L35
 482 000c 1A68     		ldr	r2, [r3]
 483 000e 104B     		ldr	r3, .L35+4
 484 0010 1A60     		str	r2, [r3]
 426:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 427:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 485              		.loc 1 427 0
 486 0012 104B     		ldr	r3, .L35+8
 487 0014 0F4A     		ldr	r2, .L35+8
 488 0016 1268     		ldr	r2, [r2]
 489 0018 0221     		movs	r1, #2
 490 001a 8A43     		bics	r2, r1
 491 001c 1A60     		str	r2, [r3]
 428:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 492              		.loc 1 428 0
 493 001e 0E4B     		ldr	r3, .L35+12
 494 0020 0D4A     		ldr	r2, .L35+12
 495 0022 1268     		ldr	r2, [r2]
 496 0024 8021     		movs	r1, #128
 497 0026 4902     		lsls	r1, r1, #9
 498 0028 0A43     		orrs	r2, r1
 499 002a 1A60     		str	r2, [r3]
 500 002c 0A4B     		ldr	r3, .L35+12
 501 002e 0A4A     		ldr	r2, .L35+12
 502 0030 1268     		ldr	r2, [r2]
 503 0032 0A49     		ldr	r1, .L35+16
 504 0034 0A40     		ands	r2, r1
 505 0036 1A60     		str	r2, [r3]
 429:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 506              		.loc 1 429 0
 507 0038 094B     		ldr	r3, .L35+20
 508 003a 0A4A     		ldr	r2, .L35+24
 509 003c 1A60     		str	r2, [r3]
 430:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 431:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 432:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 510              		.loc 1 432 0
 511 003e 0A20     		movs	r0, #10
 512 0040 FFF7FEFF 		bl	CyIntEnable
 433:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 434:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 435:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 436:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 437:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 438:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 439:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 513              		.loc 1 439 0
 514 0044 C046     		nop
 515 0046 BD46     		mov	sp, r7
 516              		@ sp needed
 517 0048 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 18


 518              	.L36:
 519 004a C046     		.align	2
 520              	.L35:
 521 004c 00000000 		.word	UART_txBufferTail
 522 0050 00000000 		.word	UART_txBufferHead
 523 0054 880F0640 		.word	1074139016
 524 0058 04020640 		.word	1074135556
 525 005c FFFFFEFF 		.word	-65537
 526 0060 800F0640 		.word	1074139008
 527 0064 F3070000 		.word	2035
 528              		.cfi_endproc
 529              	.LFE6:
 530              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 531              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 532              		.align	2
 533              		.global	UART_SpiUartDisableIntRx
 534              		.code	16
 535              		.thumb_func
 536              		.type	UART_SpiUartDisableIntRx, %function
 537              	UART_SpiUartDisableIntRx:
 538              	.LFB7:
 440:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 441:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 442:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 443:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 446:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 448:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 450:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 451:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 453:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 454:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 455:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 539              		.loc 1 455 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 8
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543 0000 80B5     		push	{r7, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 82B0     		sub	sp, sp, #8
 548              		.cfi_def_cfa_offset 16
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 456:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 457:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 458:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 551              		.loc 1 458 0
 552 0006 054B     		ldr	r3, .L39
 553 0008 1B68     		ldr	r3, [r3]
 554 000a 7B60     		str	r3, [r7, #4]
 459:Generated_Source\PSoC4/UART_SPI_UART.c **** 
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 19


 460:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 555              		.loc 1 460 0
 556 000c 034B     		ldr	r3, .L39
 557 000e 0022     		movs	r2, #0
 558 0010 1A60     		str	r2, [r3]
 461:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 462:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 559              		.loc 1 462 0
 560 0012 7B68     		ldr	r3, [r7, #4]
 463:Generated_Source\PSoC4/UART_SPI_UART.c **** }
 561              		.loc 1 463 0
 562 0014 1800     		movs	r0, r3
 563 0016 BD46     		mov	sp, r7
 564 0018 02B0     		add	sp, sp, #8
 565              		@ sp needed
 566 001a 80BD     		pop	{r7, pc}
 567              	.L40:
 568              		.align	2
 569              	.L39:
 570 001c C80F0640 		.word	1074139080
 571              		.cfi_endproc
 572              	.LFE7:
 573              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
 574              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 575              		.align	2
 576              		.global	UART_SpiUartDisableIntTx
 577              		.code	16
 578              		.thumb_func
 579              		.type	UART_SpiUartDisableIntTx, %function
 580              	UART_SpiUartDisableIntTx:
 581              	.LFB8:
 464:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 465:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 468:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 469:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 470:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 471:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 472:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 473:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 475:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 476:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 477:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 582              		.loc 1 477 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 8
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586 0000 80B5     		push	{r7, lr}
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 7, -8
 589              		.cfi_offset 14, -4
 590 0002 82B0     		sub	sp, sp, #8
 591              		.cfi_def_cfa_offset 16
 592 0004 00AF     		add	r7, sp, #0
 593              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 20


 478:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 479:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 480:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 594              		.loc 1 480 0
 595 0006 054B     		ldr	r3, .L43
 596 0008 1B68     		ldr	r3, [r3]
 597 000a 7B60     		str	r3, [r7, #4]
 481:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 482:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 598              		.loc 1 482 0
 599 000c 034B     		ldr	r3, .L43
 600 000e 0022     		movs	r2, #0
 601 0010 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 484:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 602              		.loc 1 484 0
 603 0012 7B68     		ldr	r3, [r7, #4]
 485:Generated_Source\PSoC4/UART_SPI_UART.c **** }
 604              		.loc 1 485 0
 605 0014 1800     		movs	r0, r3
 606 0016 BD46     		mov	sp, r7
 607 0018 02B0     		add	sp, sp, #8
 608              		@ sp needed
 609 001a 80BD     		pop	{r7, pc}
 610              	.L44:
 611              		.align	2
 612              	.L43:
 613 001c 880F0640 		.word	1074139016
 614              		.cfi_endproc
 615              	.LFE8:
 616              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 617              		.text
 618              	.Letext0:
 619              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 620              		.section	.debug_info,"",%progbits
 621              	.Ldebug_info0:
 622 0000 F8020000 		.4byte	0x2f8
 623 0004 0400     		.2byte	0x4
 624 0006 00000000 		.4byte	.Ldebug_abbrev0
 625 000a 04       		.byte	0x4
 626 000b 01       		.uleb128 0x1
 627 000c A2000000 		.4byte	.LASF42
 628 0010 0C       		.byte	0xc
 629 0011 BB020000 		.4byte	.LASF43
 630 0015 5A020000 		.4byte	.LASF44
 631 0019 00000000 		.4byte	.Ldebug_ranges0+0
 632 001d 00000000 		.4byte	0
 633 0021 00000000 		.4byte	.Ldebug_line0
 634 0025 02       		.uleb128 0x2
 635 0026 01       		.byte	0x1
 636 0027 06       		.byte	0x6
 637 0028 43030000 		.4byte	.LASF0
 638 002c 02       		.uleb128 0x2
 639 002d 01       		.byte	0x1
 640 002e 08       		.byte	0x8
 641 002f 3D010000 		.4byte	.LASF1
 642 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 21


 643 0034 02       		.byte	0x2
 644 0035 05       		.byte	0x5
 645 0036 B1020000 		.4byte	.LASF2
 646 003a 02       		.uleb128 0x2
 647 003b 02       		.byte	0x2
 648 003c 07       		.byte	0x7
 649 003d 13000000 		.4byte	.LASF3
 650 0041 02       		.uleb128 0x2
 651 0042 04       		.byte	0x4
 652 0043 05       		.byte	0x5
 653 0044 F9020000 		.4byte	.LASF4
 654 0048 02       		.uleb128 0x2
 655 0049 04       		.byte	0x4
 656 004a 07       		.byte	0x7
 657 004b 78000000 		.4byte	.LASF5
 658 004f 02       		.uleb128 0x2
 659 0050 08       		.byte	0x8
 660 0051 05       		.byte	0x5
 661 0052 06020000 		.4byte	.LASF6
 662 0056 02       		.uleb128 0x2
 663 0057 08       		.byte	0x8
 664 0058 07       		.byte	0x7
 665 0059 C8010000 		.4byte	.LASF7
 666 005d 03       		.uleb128 0x3
 667 005e 04       		.byte	0x4
 668 005f 05       		.byte	0x5
 669 0060 696E7400 		.ascii	"int\000"
 670 0064 02       		.uleb128 0x2
 671 0065 04       		.byte	0x4
 672 0066 07       		.byte	0x7
 673 0067 26000000 		.4byte	.LASF8
 674 006b 04       		.uleb128 0x4
 675 006c 8A000000 		.4byte	.LASF9
 676 0070 02       		.byte	0x2
 677 0071 E601     		.2byte	0x1e6
 678 0073 2C000000 		.4byte	0x2c
 679 0077 04       		.uleb128 0x4
 680 0078 7A010000 		.4byte	.LASF10
 681 007c 02       		.byte	0x2
 682 007d E801     		.2byte	0x1e8
 683 007f 48000000 		.4byte	0x48
 684 0083 02       		.uleb128 0x2
 685 0084 04       		.byte	0x4
 686 0085 04       		.byte	0x4
 687 0086 54000000 		.4byte	.LASF11
 688 008a 02       		.uleb128 0x2
 689 008b 08       		.byte	0x8
 690 008c 04       		.byte	0x4
 691 008d 61010000 		.4byte	.LASF12
 692 0091 02       		.uleb128 0x2
 693 0092 01       		.byte	0x1
 694 0093 08       		.byte	0x8
 695 0094 02030000 		.4byte	.LASF13
 696 0098 05       		.uleb128 0x5
 697 0099 6B000000 		.4byte	0x6b
 698 009d 04       		.uleb128 0x4
 699 009e 00000000 		.4byte	.LASF14
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 22


 700 00a2 02       		.byte	0x2
 701 00a3 9202     		.2byte	0x292
 702 00a5 A9000000 		.4byte	0xa9
 703 00a9 05       		.uleb128 0x5
 704 00aa 77000000 		.4byte	0x77
 705 00ae 02       		.uleb128 0x2
 706 00af 08       		.byte	0x8
 707 00b0 04       		.byte	0x4
 708 00b1 21030000 		.4byte	.LASF15
 709 00b5 02       		.uleb128 0x2
 710 00b6 04       		.byte	0x4
 711 00b7 07       		.byte	0x7
 712 00b8 FD010000 		.4byte	.LASF16
 713 00bc 06       		.uleb128 0x6
 714 00bd E2020000 		.4byte	.LASF19
 715 00c1 01       		.byte	0x1
 716 00c2 53       		.byte	0x53
 717 00c3 77000000 		.4byte	0x77
 718 00c7 00000000 		.4byte	.LFB0
 719 00cb 50000000 		.4byte	.LFE0-.LFB0
 720 00cf 01       		.uleb128 0x1
 721 00d0 9C       		.byte	0x9c
 722 00d1 F2000000 		.4byte	0xf2
 723 00d5 07       		.uleb128 0x7
 724 00d6 30010000 		.4byte	.LASF17
 725 00da 01       		.byte	0x1
 726 00db 55       		.byte	0x55
 727 00dc 77000000 		.4byte	0x77
 728 00e0 02       		.uleb128 0x2
 729 00e1 91       		.byte	0x91
 730 00e2 74       		.sleb128 -12
 731 00e3 07       		.uleb128 0x7
 732 00e4 F5010000 		.4byte	.LASF18
 733 00e8 01       		.byte	0x1
 734 00e9 58       		.byte	0x58
 735 00ea 77000000 		.4byte	0x77
 736 00ee 02       		.uleb128 0x2
 737 00ef 91       		.byte	0x91
 738 00f0 70       		.sleb128 -16
 739 00f1 00       		.byte	0
 740 00f2 06       		.uleb128 0x6
 741 00f3 4F030000 		.4byte	.LASF20
 742 00f7 01       		.byte	0x1
 743 00f8 9D       		.byte	0x9d
 744 00f9 77000000 		.4byte	0x77
 745 00fd 00000000 		.4byte	.LFB1
 746 0101 40000000 		.4byte	.LFE1-.LFB1
 747 0105 01       		.uleb128 0x1
 748 0106 9C       		.byte	0x9c
 749 0107 28010000 		.4byte	0x128
 750 010b 07       		.uleb128 0x7
 751 010c 73000000 		.4byte	.LASF21
 752 0110 01       		.byte	0x1
 753 0111 9F       		.byte	0x9f
 754 0112 77000000 		.4byte	0x77
 755 0116 02       		.uleb128 0x2
 756 0117 91       		.byte	0x91
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 23


 757 0118 74       		.sleb128 -12
 758 0119 07       		.uleb128 0x7
 759 011a 4C000000 		.4byte	.LASF22
 760 011e 01       		.byte	0x1
 761 011f A1       		.byte	0xa1
 762 0120 77000000 		.4byte	0x77
 763 0124 02       		.uleb128 0x2
 764 0125 91       		.byte	0x91
 765 0126 70       		.sleb128 -16
 766 0127 00       		.byte	0
 767 0128 08       		.uleb128 0x8
 768 0129 07030000 		.4byte	.LASF29
 769 012d 01       		.byte	0x1
 770 012e C8       		.byte	0xc8
 771 012f 00000000 		.4byte	.LFB2
 772 0133 60000000 		.4byte	.LFE2-.LFB2
 773 0137 01       		.uleb128 0x1
 774 0138 9C       		.byte	0x9c
 775 0139 09       		.uleb128 0x9
 776 013a 14020000 		.4byte	.LASF23
 777 013e 01       		.byte	0x1
 778 013f 0101     		.2byte	0x101
 779 0141 00000000 		.4byte	.LFB3
 780 0145 9C000000 		.4byte	.LFE3-.LFB3
 781 0149 01       		.uleb128 0x1
 782 014a 9C       		.byte	0x9c
 783 014b 6E010000 		.4byte	0x16e
 784 014f 0A       		.uleb128 0xa
 785 0150 0C000000 		.4byte	.LASF25
 786 0154 01       		.byte	0x1
 787 0155 0101     		.2byte	0x101
 788 0157 77000000 		.4byte	0x77
 789 015b 02       		.uleb128 0x2
 790 015c 91       		.byte	0x91
 791 015d 6C       		.sleb128 -20
 792 015e 0B       		.uleb128 0xb
 793 015f 4C000000 		.4byte	.LASF22
 794 0163 01       		.byte	0x1
 795 0164 0401     		.2byte	0x104
 796 0166 77000000 		.4byte	0x77
 797 016a 02       		.uleb128 0x2
 798 016b 91       		.byte	0x91
 799 016c 74       		.sleb128 -12
 800 016d 00       		.byte	0
 801 016e 0C       		.uleb128 0xc
 802 016f 9B010000 		.4byte	.LASF24
 803 0173 01       		.byte	0x1
 804 0174 5401     		.2byte	0x154
 805 0176 00000000 		.4byte	.LFB4
 806 017a 34000000 		.4byte	.LFE4-.LFB4
 807 017e 01       		.uleb128 0x1
 808 017f 9C       		.byte	0x9c
 809 0180 B0010000 		.4byte	0x1b0
 810 0184 0A       		.uleb128 0xa
 811 0185 37010000 		.4byte	.LASF26
 812 0189 01       		.byte	0x1
 813 018a 5401     		.2byte	0x154
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 24


 814 018c B0010000 		.4byte	0x1b0
 815 0190 02       		.uleb128 0x2
 816 0191 91       		.byte	0x91
 817 0192 6C       		.sleb128 -20
 818 0193 0A       		.uleb128 0xa
 819 0194 06000000 		.4byte	.LASF27
 820 0198 01       		.byte	0x1
 821 0199 5401     		.2byte	0x154
 822 019b 77000000 		.4byte	0x77
 823 019f 02       		.uleb128 0x2
 824 01a0 91       		.byte	0x91
 825 01a1 68       		.sleb128 -24
 826 01a2 0D       		.uleb128 0xd
 827 01a3 6900     		.ascii	"i\000"
 828 01a5 01       		.byte	0x1
 829 01a6 5601     		.2byte	0x156
 830 01a8 77000000 		.4byte	0x77
 831 01ac 02       		.uleb128 0x2
 832 01ad 91       		.byte	0x91
 833 01ae 74       		.sleb128 -12
 834 01af 00       		.byte	0
 835 01b0 0E       		.uleb128 0xe
 836 01b1 04       		.byte	0x4
 837 01b2 B6010000 		.4byte	0x1b6
 838 01b6 0F       		.uleb128 0xf
 839 01b7 6B000000 		.4byte	0x6b
 840 01bb 10       		.uleb128 0x10
 841 01bc 2C020000 		.4byte	.LASF28
 842 01c0 01       		.byte	0x1
 843 01c1 7501     		.2byte	0x175
 844 01c3 77000000 		.4byte	0x77
 845 01c7 00000000 		.4byte	.LFB5
 846 01cb 40000000 		.4byte	.LFE5-.LFB5
 847 01cf 01       		.uleb128 0x1
 848 01d0 9C       		.byte	0x9c
 849 01d1 F4010000 		.4byte	0x1f4
 850 01d5 0B       		.uleb128 0xb
 851 01d6 73000000 		.4byte	.LASF21
 852 01da 01       		.byte	0x1
 853 01db 7701     		.2byte	0x177
 854 01dd 77000000 		.4byte	0x77
 855 01e1 02       		.uleb128 0x2
 856 01e2 91       		.byte	0x91
 857 01e3 74       		.sleb128 -12
 858 01e4 0B       		.uleb128 0xb
 859 01e5 F5010000 		.4byte	.LASF18
 860 01e9 01       		.byte	0x1
 861 01ea 7901     		.2byte	0x179
 862 01ec 77000000 		.4byte	0x77
 863 01f0 02       		.uleb128 0x2
 864 01f1 91       		.byte	0x91
 865 01f2 70       		.sleb128 -16
 866 01f3 00       		.byte	0
 867 01f4 11       		.uleb128 0x11
 868 01f5 81010000 		.4byte	.LASF30
 869 01f9 01       		.byte	0x1
 870 01fa A101     		.2byte	0x1a1
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 25


 871 01fc 00000000 		.4byte	.LFB6
 872 0200 68000000 		.4byte	.LFE6-.LFB6
 873 0204 01       		.uleb128 0x1
 874 0205 9C       		.byte	0x9c
 875 0206 10       		.uleb128 0x10
 876 0207 33000000 		.4byte	.LASF31
 877 020b 01       		.byte	0x1
 878 020c C601     		.2byte	0x1c6
 879 020e 77000000 		.4byte	0x77
 880 0212 00000000 		.4byte	.LFB7
 881 0216 20000000 		.4byte	.LFE7-.LFB7
 882 021a 01       		.uleb128 0x1
 883 021b 9C       		.byte	0x9c
 884 021c 30020000 		.4byte	0x230
 885 0220 0B       		.uleb128 0xb
 886 0221 BE010000 		.4byte	.LASF32
 887 0225 01       		.byte	0x1
 888 0226 C801     		.2byte	0x1c8
 889 0228 77000000 		.4byte	0x77
 890 022c 02       		.uleb128 0x2
 891 022d 91       		.byte	0x91
 892 022e 74       		.sleb128 -12
 893 022f 00       		.byte	0
 894 0230 10       		.uleb128 0x10
 895 0231 5A000000 		.4byte	.LASF33
 896 0235 01       		.byte	0x1
 897 0236 DC01     		.2byte	0x1dc
 898 0238 77000000 		.4byte	0x77
 899 023c 00000000 		.4byte	.LFB8
 900 0240 20000000 		.4byte	.LFE8-.LFB8
 901 0244 01       		.uleb128 0x1
 902 0245 9C       		.byte	0x9c
 903 0246 5A020000 		.4byte	0x25a
 904 024a 0B       		.uleb128 0xb
 905 024b B0010000 		.4byte	.LASF34
 906 024f 01       		.byte	0x1
 907 0250 DE01     		.2byte	0x1de
 908 0252 77000000 		.4byte	0x77
 909 0256 02       		.uleb128 0x2
 910 0257 91       		.byte	0x91
 911 0258 74       		.sleb128 -12
 912 0259 00       		.byte	0
 913 025a 12       		.uleb128 0x12
 914 025b 6B030000 		.4byte	.LASF35
 915 025f 01       		.byte	0x1
 916 0260 1C       		.byte	0x1c
 917 0261 A9000000 		.4byte	0xa9
 918 0265 05       		.uleb128 0x5
 919 0266 03       		.byte	0x3
 920 0267 00000000 		.4byte	UART_rxBufferHead
 921 026b 12       		.uleb128 0x12
 922 026c 90000000 		.4byte	.LASF36
 923 0270 01       		.byte	0x1
 924 0271 1E       		.byte	0x1e
 925 0272 A9000000 		.4byte	0xa9
 926 0276 05       		.uleb128 0x5
 927 0277 03       		.byte	0x3
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 26


 928 0278 00000000 		.4byte	UART_rxBufferTail
 929 027c 12       		.uleb128 0x12
 930 027d DF010000 		.4byte	.LASF37
 931 0281 01       		.byte	0x1
 932 0282 26       		.byte	0x26
 933 0283 98000000 		.4byte	0x98
 934 0287 05       		.uleb128 0x5
 935 0288 03       		.byte	0x3
 936 0289 00000000 		.4byte	UART_rxBufferOverflow
 937 028d 12       		.uleb128 0x12
 938 028e 48020000 		.4byte	.LASF38
 939 0292 01       		.byte	0x1
 940 0293 2C       		.byte	0x2c
 941 0294 A9000000 		.4byte	0xa9
 942 0298 05       		.uleb128 0x5
 943 0299 03       		.byte	0x3
 944 029a 00000000 		.4byte	UART_txBufferHead
 945 029e 12       		.uleb128 0x12
 946 029f 68010000 		.4byte	.LASF39
 947 02a3 01       		.byte	0x1
 948 02a4 2E       		.byte	0x2e
 949 02a5 A9000000 		.4byte	0xa9
 950 02a9 05       		.uleb128 0x5
 951 02aa 03       		.byte	0x3
 952 02ab 00000000 		.4byte	UART_txBufferTail
 953 02af 13       		.uleb128 0x13
 954 02b0 98000000 		.4byte	0x98
 955 02b4 BF020000 		.4byte	0x2bf
 956 02b8 14       		.uleb128 0x14
 957 02b9 B5000000 		.4byte	0xb5
 958 02bd 64       		.byte	0x64
 959 02be 00       		.byte	0
 960 02bf 12       		.uleb128 0x12
 961 02c0 4B010000 		.4byte	.LASF40
 962 02c4 01       		.byte	0x1
 963 02c5 33       		.byte	0x33
 964 02c6 D0020000 		.4byte	0x2d0
 965 02ca 05       		.uleb128 0x5
 966 02cb 03       		.byte	0x3
 967 02cc 00000000 		.4byte	UART_rxBufferInternal
 968 02d0 05       		.uleb128 0x5
 969 02d1 AF020000 		.4byte	0x2af
 970 02d5 13       		.uleb128 0x13
 971 02d6 98000000 		.4byte	0x98
 972 02da E5020000 		.4byte	0x2e5
 973 02de 14       		.uleb128 0x14
 974 02df B5000000 		.4byte	0xb5
 975 02e3 63       		.byte	0x63
 976 02e4 00       		.byte	0
 977 02e5 12       		.uleb128 0x12
 978 02e6 2D030000 		.4byte	.LASF41
 979 02ea 01       		.byte	0x1
 980 02eb 37       		.byte	0x37
 981 02ec F6020000 		.4byte	0x2f6
 982 02f0 05       		.uleb128 0x5
 983 02f1 03       		.byte	0x3
 984 02f2 00000000 		.4byte	UART_txBufferInternal
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 27


 985 02f6 05       		.uleb128 0x5
 986 02f7 D5020000 		.4byte	0x2d5
 987 02fb 00       		.byte	0
 988              		.section	.debug_abbrev,"",%progbits
 989              	.Ldebug_abbrev0:
 990 0000 01       		.uleb128 0x1
 991 0001 11       		.uleb128 0x11
 992 0002 01       		.byte	0x1
 993 0003 25       		.uleb128 0x25
 994 0004 0E       		.uleb128 0xe
 995 0005 13       		.uleb128 0x13
 996 0006 0B       		.uleb128 0xb
 997 0007 03       		.uleb128 0x3
 998 0008 0E       		.uleb128 0xe
 999 0009 1B       		.uleb128 0x1b
 1000 000a 0E       		.uleb128 0xe
 1001 000b 55       		.uleb128 0x55
 1002 000c 17       		.uleb128 0x17
 1003 000d 11       		.uleb128 0x11
 1004 000e 01       		.uleb128 0x1
 1005 000f 10       		.uleb128 0x10
 1006 0010 17       		.uleb128 0x17
 1007 0011 00       		.byte	0
 1008 0012 00       		.byte	0
 1009 0013 02       		.uleb128 0x2
 1010 0014 24       		.uleb128 0x24
 1011 0015 00       		.byte	0
 1012 0016 0B       		.uleb128 0xb
 1013 0017 0B       		.uleb128 0xb
 1014 0018 3E       		.uleb128 0x3e
 1015 0019 0B       		.uleb128 0xb
 1016 001a 03       		.uleb128 0x3
 1017 001b 0E       		.uleb128 0xe
 1018 001c 00       		.byte	0
 1019 001d 00       		.byte	0
 1020 001e 03       		.uleb128 0x3
 1021 001f 24       		.uleb128 0x24
 1022 0020 00       		.byte	0
 1023 0021 0B       		.uleb128 0xb
 1024 0022 0B       		.uleb128 0xb
 1025 0023 3E       		.uleb128 0x3e
 1026 0024 0B       		.uleb128 0xb
 1027 0025 03       		.uleb128 0x3
 1028 0026 08       		.uleb128 0x8
 1029 0027 00       		.byte	0
 1030 0028 00       		.byte	0
 1031 0029 04       		.uleb128 0x4
 1032 002a 16       		.uleb128 0x16
 1033 002b 00       		.byte	0
 1034 002c 03       		.uleb128 0x3
 1035 002d 0E       		.uleb128 0xe
 1036 002e 3A       		.uleb128 0x3a
 1037 002f 0B       		.uleb128 0xb
 1038 0030 3B       		.uleb128 0x3b
 1039 0031 05       		.uleb128 0x5
 1040 0032 49       		.uleb128 0x49
 1041 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 28


 1042 0034 00       		.byte	0
 1043 0035 00       		.byte	0
 1044 0036 05       		.uleb128 0x5
 1045 0037 35       		.uleb128 0x35
 1046 0038 00       		.byte	0
 1047 0039 49       		.uleb128 0x49
 1048 003a 13       		.uleb128 0x13
 1049 003b 00       		.byte	0
 1050 003c 00       		.byte	0
 1051 003d 06       		.uleb128 0x6
 1052 003e 2E       		.uleb128 0x2e
 1053 003f 01       		.byte	0x1
 1054 0040 3F       		.uleb128 0x3f
 1055 0041 19       		.uleb128 0x19
 1056 0042 03       		.uleb128 0x3
 1057 0043 0E       		.uleb128 0xe
 1058 0044 3A       		.uleb128 0x3a
 1059 0045 0B       		.uleb128 0xb
 1060 0046 3B       		.uleb128 0x3b
 1061 0047 0B       		.uleb128 0xb
 1062 0048 27       		.uleb128 0x27
 1063 0049 19       		.uleb128 0x19
 1064 004a 49       		.uleb128 0x49
 1065 004b 13       		.uleb128 0x13
 1066 004c 11       		.uleb128 0x11
 1067 004d 01       		.uleb128 0x1
 1068 004e 12       		.uleb128 0x12
 1069 004f 06       		.uleb128 0x6
 1070 0050 40       		.uleb128 0x40
 1071 0051 18       		.uleb128 0x18
 1072 0052 9742     		.uleb128 0x2117
 1073 0054 19       		.uleb128 0x19
 1074 0055 01       		.uleb128 0x1
 1075 0056 13       		.uleb128 0x13
 1076 0057 00       		.byte	0
 1077 0058 00       		.byte	0
 1078 0059 07       		.uleb128 0x7
 1079 005a 34       		.uleb128 0x34
 1080 005b 00       		.byte	0
 1081 005c 03       		.uleb128 0x3
 1082 005d 0E       		.uleb128 0xe
 1083 005e 3A       		.uleb128 0x3a
 1084 005f 0B       		.uleb128 0xb
 1085 0060 3B       		.uleb128 0x3b
 1086 0061 0B       		.uleb128 0xb
 1087 0062 49       		.uleb128 0x49
 1088 0063 13       		.uleb128 0x13
 1089 0064 02       		.uleb128 0x2
 1090 0065 18       		.uleb128 0x18
 1091 0066 00       		.byte	0
 1092 0067 00       		.byte	0
 1093 0068 08       		.uleb128 0x8
 1094 0069 2E       		.uleb128 0x2e
 1095 006a 00       		.byte	0
 1096 006b 3F       		.uleb128 0x3f
 1097 006c 19       		.uleb128 0x19
 1098 006d 03       		.uleb128 0x3
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 29


 1099 006e 0E       		.uleb128 0xe
 1100 006f 3A       		.uleb128 0x3a
 1101 0070 0B       		.uleb128 0xb
 1102 0071 3B       		.uleb128 0x3b
 1103 0072 0B       		.uleb128 0xb
 1104 0073 27       		.uleb128 0x27
 1105 0074 19       		.uleb128 0x19
 1106 0075 11       		.uleb128 0x11
 1107 0076 01       		.uleb128 0x1
 1108 0077 12       		.uleb128 0x12
 1109 0078 06       		.uleb128 0x6
 1110 0079 40       		.uleb128 0x40
 1111 007a 18       		.uleb128 0x18
 1112 007b 9642     		.uleb128 0x2116
 1113 007d 19       		.uleb128 0x19
 1114 007e 00       		.byte	0
 1115 007f 00       		.byte	0
 1116 0080 09       		.uleb128 0x9
 1117 0081 2E       		.uleb128 0x2e
 1118 0082 01       		.byte	0x1
 1119 0083 3F       		.uleb128 0x3f
 1120 0084 19       		.uleb128 0x19
 1121 0085 03       		.uleb128 0x3
 1122 0086 0E       		.uleb128 0xe
 1123 0087 3A       		.uleb128 0x3a
 1124 0088 0B       		.uleb128 0xb
 1125 0089 3B       		.uleb128 0x3b
 1126 008a 05       		.uleb128 0x5
 1127 008b 27       		.uleb128 0x27
 1128 008c 19       		.uleb128 0x19
 1129 008d 11       		.uleb128 0x11
 1130 008e 01       		.uleb128 0x1
 1131 008f 12       		.uleb128 0x12
 1132 0090 06       		.uleb128 0x6
 1133 0091 40       		.uleb128 0x40
 1134 0092 18       		.uleb128 0x18
 1135 0093 9742     		.uleb128 0x2117
 1136 0095 19       		.uleb128 0x19
 1137 0096 01       		.uleb128 0x1
 1138 0097 13       		.uleb128 0x13
 1139 0098 00       		.byte	0
 1140 0099 00       		.byte	0
 1141 009a 0A       		.uleb128 0xa
 1142 009b 05       		.uleb128 0x5
 1143 009c 00       		.byte	0
 1144 009d 03       		.uleb128 0x3
 1145 009e 0E       		.uleb128 0xe
 1146 009f 3A       		.uleb128 0x3a
 1147 00a0 0B       		.uleb128 0xb
 1148 00a1 3B       		.uleb128 0x3b
 1149 00a2 05       		.uleb128 0x5
 1150 00a3 49       		.uleb128 0x49
 1151 00a4 13       		.uleb128 0x13
 1152 00a5 02       		.uleb128 0x2
 1153 00a6 18       		.uleb128 0x18
 1154 00a7 00       		.byte	0
 1155 00a8 00       		.byte	0
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 30


 1156 00a9 0B       		.uleb128 0xb
 1157 00aa 34       		.uleb128 0x34
 1158 00ab 00       		.byte	0
 1159 00ac 03       		.uleb128 0x3
 1160 00ad 0E       		.uleb128 0xe
 1161 00ae 3A       		.uleb128 0x3a
 1162 00af 0B       		.uleb128 0xb
 1163 00b0 3B       		.uleb128 0x3b
 1164 00b1 05       		.uleb128 0x5
 1165 00b2 49       		.uleb128 0x49
 1166 00b3 13       		.uleb128 0x13
 1167 00b4 02       		.uleb128 0x2
 1168 00b5 18       		.uleb128 0x18
 1169 00b6 00       		.byte	0
 1170 00b7 00       		.byte	0
 1171 00b8 0C       		.uleb128 0xc
 1172 00b9 2E       		.uleb128 0x2e
 1173 00ba 01       		.byte	0x1
 1174 00bb 3F       		.uleb128 0x3f
 1175 00bc 19       		.uleb128 0x19
 1176 00bd 03       		.uleb128 0x3
 1177 00be 0E       		.uleb128 0xe
 1178 00bf 3A       		.uleb128 0x3a
 1179 00c0 0B       		.uleb128 0xb
 1180 00c1 3B       		.uleb128 0x3b
 1181 00c2 05       		.uleb128 0x5
 1182 00c3 27       		.uleb128 0x27
 1183 00c4 19       		.uleb128 0x19
 1184 00c5 11       		.uleb128 0x11
 1185 00c6 01       		.uleb128 0x1
 1186 00c7 12       		.uleb128 0x12
 1187 00c8 06       		.uleb128 0x6
 1188 00c9 40       		.uleb128 0x40
 1189 00ca 18       		.uleb128 0x18
 1190 00cb 9642     		.uleb128 0x2116
 1191 00cd 19       		.uleb128 0x19
 1192 00ce 01       		.uleb128 0x1
 1193 00cf 13       		.uleb128 0x13
 1194 00d0 00       		.byte	0
 1195 00d1 00       		.byte	0
 1196 00d2 0D       		.uleb128 0xd
 1197 00d3 34       		.uleb128 0x34
 1198 00d4 00       		.byte	0
 1199 00d5 03       		.uleb128 0x3
 1200 00d6 08       		.uleb128 0x8
 1201 00d7 3A       		.uleb128 0x3a
 1202 00d8 0B       		.uleb128 0xb
 1203 00d9 3B       		.uleb128 0x3b
 1204 00da 05       		.uleb128 0x5
 1205 00db 49       		.uleb128 0x49
 1206 00dc 13       		.uleb128 0x13
 1207 00dd 02       		.uleb128 0x2
 1208 00de 18       		.uleb128 0x18
 1209 00df 00       		.byte	0
 1210 00e0 00       		.byte	0
 1211 00e1 0E       		.uleb128 0xe
 1212 00e2 0F       		.uleb128 0xf
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 31


 1213 00e3 00       		.byte	0
 1214 00e4 0B       		.uleb128 0xb
 1215 00e5 0B       		.uleb128 0xb
 1216 00e6 49       		.uleb128 0x49
 1217 00e7 13       		.uleb128 0x13
 1218 00e8 00       		.byte	0
 1219 00e9 00       		.byte	0
 1220 00ea 0F       		.uleb128 0xf
 1221 00eb 26       		.uleb128 0x26
 1222 00ec 00       		.byte	0
 1223 00ed 49       		.uleb128 0x49
 1224 00ee 13       		.uleb128 0x13
 1225 00ef 00       		.byte	0
 1226 00f0 00       		.byte	0
 1227 00f1 10       		.uleb128 0x10
 1228 00f2 2E       		.uleb128 0x2e
 1229 00f3 01       		.byte	0x1
 1230 00f4 3F       		.uleb128 0x3f
 1231 00f5 19       		.uleb128 0x19
 1232 00f6 03       		.uleb128 0x3
 1233 00f7 0E       		.uleb128 0xe
 1234 00f8 3A       		.uleb128 0x3a
 1235 00f9 0B       		.uleb128 0xb
 1236 00fa 3B       		.uleb128 0x3b
 1237 00fb 05       		.uleb128 0x5
 1238 00fc 27       		.uleb128 0x27
 1239 00fd 19       		.uleb128 0x19
 1240 00fe 49       		.uleb128 0x49
 1241 00ff 13       		.uleb128 0x13
 1242 0100 11       		.uleb128 0x11
 1243 0101 01       		.uleb128 0x1
 1244 0102 12       		.uleb128 0x12
 1245 0103 06       		.uleb128 0x6
 1246 0104 40       		.uleb128 0x40
 1247 0105 18       		.uleb128 0x18
 1248 0106 9742     		.uleb128 0x2117
 1249 0108 19       		.uleb128 0x19
 1250 0109 01       		.uleb128 0x1
 1251 010a 13       		.uleb128 0x13
 1252 010b 00       		.byte	0
 1253 010c 00       		.byte	0
 1254 010d 11       		.uleb128 0x11
 1255 010e 2E       		.uleb128 0x2e
 1256 010f 00       		.byte	0
 1257 0110 3F       		.uleb128 0x3f
 1258 0111 19       		.uleb128 0x19
 1259 0112 03       		.uleb128 0x3
 1260 0113 0E       		.uleb128 0xe
 1261 0114 3A       		.uleb128 0x3a
 1262 0115 0B       		.uleb128 0xb
 1263 0116 3B       		.uleb128 0x3b
 1264 0117 05       		.uleb128 0x5
 1265 0118 27       		.uleb128 0x27
 1266 0119 19       		.uleb128 0x19
 1267 011a 11       		.uleb128 0x11
 1268 011b 01       		.uleb128 0x1
 1269 011c 12       		.uleb128 0x12
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 32


 1270 011d 06       		.uleb128 0x6
 1271 011e 40       		.uleb128 0x40
 1272 011f 18       		.uleb128 0x18
 1273 0120 9642     		.uleb128 0x2116
 1274 0122 19       		.uleb128 0x19
 1275 0123 00       		.byte	0
 1276 0124 00       		.byte	0
 1277 0125 12       		.uleb128 0x12
 1278 0126 34       		.uleb128 0x34
 1279 0127 00       		.byte	0
 1280 0128 03       		.uleb128 0x3
 1281 0129 0E       		.uleb128 0xe
 1282 012a 3A       		.uleb128 0x3a
 1283 012b 0B       		.uleb128 0xb
 1284 012c 3B       		.uleb128 0x3b
 1285 012d 0B       		.uleb128 0xb
 1286 012e 49       		.uleb128 0x49
 1287 012f 13       		.uleb128 0x13
 1288 0130 3F       		.uleb128 0x3f
 1289 0131 19       		.uleb128 0x19
 1290 0132 02       		.uleb128 0x2
 1291 0133 18       		.uleb128 0x18
 1292 0134 00       		.byte	0
 1293 0135 00       		.byte	0
 1294 0136 13       		.uleb128 0x13
 1295 0137 01       		.uleb128 0x1
 1296 0138 01       		.byte	0x1
 1297 0139 49       		.uleb128 0x49
 1298 013a 13       		.uleb128 0x13
 1299 013b 01       		.uleb128 0x1
 1300 013c 13       		.uleb128 0x13
 1301 013d 00       		.byte	0
 1302 013e 00       		.byte	0
 1303 013f 14       		.uleb128 0x14
 1304 0140 21       		.uleb128 0x21
 1305 0141 00       		.byte	0
 1306 0142 49       		.uleb128 0x49
 1307 0143 13       		.uleb128 0x13
 1308 0144 2F       		.uleb128 0x2f
 1309 0145 0B       		.uleb128 0xb
 1310 0146 00       		.byte	0
 1311 0147 00       		.byte	0
 1312 0148 00       		.byte	0
 1313              		.section	.debug_aranges,"",%progbits
 1314 0000 5C000000 		.4byte	0x5c
 1315 0004 0200     		.2byte	0x2
 1316 0006 00000000 		.4byte	.Ldebug_info0
 1317 000a 04       		.byte	0x4
 1318 000b 00       		.byte	0
 1319 000c 0000     		.2byte	0
 1320 000e 0000     		.2byte	0
 1321 0010 00000000 		.4byte	.LFB0
 1322 0014 50000000 		.4byte	.LFE0-.LFB0
 1323 0018 00000000 		.4byte	.LFB1
 1324 001c 40000000 		.4byte	.LFE1-.LFB1
 1325 0020 00000000 		.4byte	.LFB2
 1326 0024 60000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 33


 1327 0028 00000000 		.4byte	.LFB3
 1328 002c 9C000000 		.4byte	.LFE3-.LFB3
 1329 0030 00000000 		.4byte	.LFB4
 1330 0034 34000000 		.4byte	.LFE4-.LFB4
 1331 0038 00000000 		.4byte	.LFB5
 1332 003c 40000000 		.4byte	.LFE5-.LFB5
 1333 0040 00000000 		.4byte	.LFB6
 1334 0044 68000000 		.4byte	.LFE6-.LFB6
 1335 0048 00000000 		.4byte	.LFB7
 1336 004c 20000000 		.4byte	.LFE7-.LFB7
 1337 0050 00000000 		.4byte	.LFB8
 1338 0054 20000000 		.4byte	.LFE8-.LFB8
 1339 0058 00000000 		.4byte	0
 1340 005c 00000000 		.4byte	0
 1341              		.section	.debug_ranges,"",%progbits
 1342              	.Ldebug_ranges0:
 1343 0000 00000000 		.4byte	.LFB0
 1344 0004 50000000 		.4byte	.LFE0
 1345 0008 00000000 		.4byte	.LFB1
 1346 000c 40000000 		.4byte	.LFE1
 1347 0010 00000000 		.4byte	.LFB2
 1348 0014 60000000 		.4byte	.LFE2
 1349 0018 00000000 		.4byte	.LFB3
 1350 001c 9C000000 		.4byte	.LFE3
 1351 0020 00000000 		.4byte	.LFB4
 1352 0024 34000000 		.4byte	.LFE4
 1353 0028 00000000 		.4byte	.LFB5
 1354 002c 40000000 		.4byte	.LFE5
 1355 0030 00000000 		.4byte	.LFB6
 1356 0034 68000000 		.4byte	.LFE6
 1357 0038 00000000 		.4byte	.LFB7
 1358 003c 20000000 		.4byte	.LFE7
 1359 0040 00000000 		.4byte	.LFB8
 1360 0044 20000000 		.4byte	.LFE8
 1361 0048 00000000 		.4byte	0
 1362 004c 00000000 		.4byte	0
 1363              		.section	.debug_line,"",%progbits
 1364              	.Ldebug_line0:
 1365 0000 4B010000 		.section	.debug_str,"MS",%progbits,1
 1365      02004A00 
 1365      00000201 
 1365      FB0E0D00 
 1365      01010101 
 1366              	.LASF14:
 1367 0000 72656733 		.ascii	"reg32\000"
 1367      3200
 1368              	.LASF27:
 1369 0006 636F756E 		.ascii	"count\000"
 1369      7400
 1370              	.LASF25:
 1371 000c 74784461 		.ascii	"txData\000"
 1371      746100
 1372              	.LASF3:
 1373 0013 73686F72 		.ascii	"short unsigned int\000"
 1373      7420756E 
 1373      7369676E 
 1373      65642069 
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 34


 1373      6E7400
 1374              	.LASF8:
 1375 0026 756E7369 		.ascii	"unsigned int\000"
 1375      676E6564 
 1375      20696E74 
 1375      00
 1376              	.LASF31:
 1377 0033 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 1377      5F537069 
 1377      55617274 
 1377      44697361 
 1377      626C6549 
 1378              	.LASF22:
 1379 004c 6C6F6348 		.ascii	"locHead\000"
 1379      65616400 
 1380              	.LASF11:
 1381 0054 666C6F61 		.ascii	"float\000"
 1381      7400
 1382              	.LASF33:
 1383 005a 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 1383      5F537069 
 1383      55617274 
 1383      44697361 
 1383      626C6549 
 1384              	.LASF21:
 1385 0073 73697A65 		.ascii	"size\000"
 1385      00
 1386              	.LASF5:
 1387 0078 6C6F6E67 		.ascii	"long unsigned int\000"
 1387      20756E73 
 1387      69676E65 
 1387      6420696E 
 1387      7400
 1388              	.LASF9:
 1389 008a 75696E74 		.ascii	"uint8\000"
 1389      3800
 1390              	.LASF36:
 1391 0090 55415254 		.ascii	"UART_rxBufferTail\000"
 1391      5F727842 
 1391      75666665 
 1391      72546169 
 1391      6C00
 1392              	.LASF42:
 1393 00a2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1393      43313120 
 1393      352E342E 
 1393      31203230 
 1393      31363036 
 1394 00d5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1394      20726576 
 1394      6973696F 
 1394      6E203233 
 1394      37373135 
 1395 0108 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1395      66756E63 
 1395      74696F6E 
 1395      2D736563 
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 35


 1395      74696F6E 
 1396              	.LASF17:
 1397 0130 72784461 		.ascii	"rxData\000"
 1397      746100
 1398              	.LASF26:
 1399 0137 77724275 		.ascii	"wrBuf\000"
 1399      6600
 1400              	.LASF1:
 1401 013d 756E7369 		.ascii	"unsigned char\000"
 1401      676E6564 
 1401      20636861 
 1401      7200
 1402              	.LASF40:
 1403 014b 55415254 		.ascii	"UART_rxBufferInternal\000"
 1403      5F727842 
 1403      75666665 
 1403      72496E74 
 1403      65726E61 
 1404              	.LASF12:
 1405 0161 646F7562 		.ascii	"double\000"
 1405      6C6500
 1406              	.LASF39:
 1407 0168 55415254 		.ascii	"UART_txBufferTail\000"
 1407      5F747842 
 1407      75666665 
 1407      72546169 
 1407      6C00
 1408              	.LASF10:
 1409 017a 75696E74 		.ascii	"uint32\000"
 1409      333200
 1410              	.LASF30:
 1411 0181 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 1411      5F537069 
 1411      55617274 
 1411      436C6561 
 1411      72547842 
 1412              	.LASF24:
 1413 019b 55415254 		.ascii	"UART_SpiUartPutArray\000"
 1413      5F537069 
 1413      55617274 
 1413      50757441 
 1413      72726179 
 1414              	.LASF34:
 1415 01b0 696E7453 		.ascii	"intSourceMask\000"
 1415      6F757263 
 1415      654D6173 
 1415      6B00
 1416              	.LASF32:
 1417 01be 696E7453 		.ascii	"intSource\000"
 1417      6F757263 
 1417      6500
 1418              	.LASF7:
 1419 01c8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1419      206C6F6E 
 1419      6720756E 
 1419      7369676E 
 1419      65642069 
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 36


 1420              	.LASF37:
 1421 01df 55415254 		.ascii	"UART_rxBufferOverflow\000"
 1421      5F727842 
 1421      75666665 
 1421      724F7665 
 1421      72666C6F 
 1422              	.LASF18:
 1423 01f5 6C6F6354 		.ascii	"locTail\000"
 1423      61696C00 
 1424              	.LASF16:
 1425 01fd 73697A65 		.ascii	"sizetype\000"
 1425      74797065 
 1425      00
 1426              	.LASF6:
 1427 0206 6C6F6E67 		.ascii	"long long int\000"
 1427      206C6F6E 
 1427      6720696E 
 1427      7400
 1428              	.LASF23:
 1429 0214 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1429      5F537069 
 1429      55617274 
 1429      57726974 
 1429      65547844 
 1430              	.LASF28:
 1431 022c 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 1431      5F537069 
 1431      55617274 
 1431      47657454 
 1431      78427566 
 1432              	.LASF38:
 1433 0248 55415254 		.ascii	"UART_txBufferHead\000"
 1433      5F747842 
 1433      75666665 
 1433      72486561 
 1433      6400
 1434              	.LASF44:
 1435 025a 433A5C55 		.ascii	"C:\\Users\\Laurent\\Documents\\PSoC Creator\\4.4\\V"
 1435      73657273 
 1435      5C4C6175 
 1435      72656E74 
 1435      5C446F63 
 1436 0287 484E3730 		.ascii	"HN7040AY\\Labo_Autom\\VNH7040_modifie.cydsn\000"
 1436      34304159 
 1436      5C4C6162 
 1436      6F5F4175 
 1436      746F6D5C 
 1437              	.LASF2:
 1438 02b1 73686F72 		.ascii	"short int\000"
 1438      7420696E 
 1438      7400
 1439              	.LASF43:
 1440 02bb 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 1440      72617465 
 1440      645F536F 
 1440      75726365 
 1440      5C50536F 
ARM GAS  C:\Users\Laurent\AppData\Local\Temp\ccVBD9HN.s 			page 37


 1441              	.LASF19:
 1442 02e2 55415254 		.ascii	"UART_SpiUartReadRxData\000"
 1442      5F537069 
 1442      55617274 
 1442      52656164 
 1442      52784461 
 1443              	.LASF4:
 1444 02f9 6C6F6E67 		.ascii	"long int\000"
 1444      20696E74 
 1444      00
 1445              	.LASF13:
 1446 0302 63686172 		.ascii	"char\000"
 1446      00
 1447              	.LASF29:
 1448 0307 55415254 		.ascii	"UART_SpiUartClearRxBuffer\000"
 1448      5F537069 
 1448      55617274 
 1448      436C6561 
 1448      72527842 
 1449              	.LASF15:
 1450 0321 6C6F6E67 		.ascii	"long double\000"
 1450      20646F75 
 1450      626C6500 
 1451              	.LASF41:
 1452 032d 55415254 		.ascii	"UART_txBufferInternal\000"
 1452      5F747842 
 1452      75666665 
 1452      72496E74 
 1452      65726E61 
 1453              	.LASF0:
 1454 0343 7369676E 		.ascii	"signed char\000"
 1454      65642063 
 1454      68617200 
 1455              	.LASF20:
 1456 034f 55415254 		.ascii	"UART_SpiUartGetRxBufferSize\000"
 1456      5F537069 
 1456      55617274 
 1456      47657452 
 1456      78427566 
 1457              	.LASF35:
 1458 036b 55415254 		.ascii	"UART_rxBufferHead\000"
 1458      5F727842 
 1458      75666665 
 1458      72486561 
 1458      6400
 1459              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
